-- Atin PS with Orion UI (Auto ON + On/Off Tabs + Status Label)

-- Load Orion UI
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local Window = OrionLib:MakeWindow({
    Name = "AtinPS Auto",
    HidePremium = false,
    SaveConfig = false,
    ConfigFolder = "AtinPS"
})

-- Tabs
local TabOn  = Window:MakeTab({Name = "On", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local TabOff = Window:MakeTab({Name = "Off", Icon = "rbxassetid://4483345998", PremiumOnly = false})

-- ====== CONFIG ======
local PRIVATE_PLACE_ID = 123224294054165
local AUTO_URL         = "https://raw.githubusercontent.com/LlyXCode-gif/LlyXCode/refs/heads/main/AtinVIP"
local OFFSET_Y         = 0
local DELAY            = 1
local REPEAT_26        = 1
local REPEAT_PUNC      = 1
local ASK_DELAY        = 1

local POS_CP26   = Vector3.new(625.56, 1799.20, 3432.68)
local POS_PUNCAK = Vector3.new(782.69, 2155.87, 3915.90)

-- ====== SERVICES ======
local Players         = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local player          = Players.LocalPlayer
repeat task.wait() until game:IsLoaded()

-- ====== HELPERS ======
local function hrp()
    local c = player.Character or player.CharacterAdded:Wait()
    return c:WaitForChild("HumanoidRootPart")
end

local function zeroVelocities(char)
    for _, v in ipairs(char:GetDescendants()) do
        if v:IsA("BasePart") then
            v.AssemblyLinearVelocity  = Vector3.new(0,0,0)
            v.AssemblyAngularVelocity = Vector3.new(0,0,0)
        end
    end
end

local function tpInstant(pos)
    local c = player.Character or player.CharacterAdded:Wait()
    zeroVelocities(c)
    hrp().CFrame = CFrame.new(pos + Vector3.new(0, OFFSET_Y, 0))
end

local function queueAuto(url)
    local q = queue_on_teleport
        or (syn and syn.queue_on_teleport)
        or (fluxus and fluxus.queue_on_teleport)
        or (KRNL_LOADED and queue_on_teleport)
        or (getgenv and getgenv().queue_on_teleport)
    if q and type(q) == "function" and url and url ~= "" then
        q(('loadstring(game:HttpGet("%s"))()'):format(url))
    end
end

-- ====== STATE ======
local running  = false
local stopFlag = false
local StatusLabel = TabOn:AddLabel("Status: Idle")

local function setStatus(text)
    StatusLabel:Set("Status: " .. text)
end

local function runAuto()
    running = true
    stopFlag = false
    setStatus("Running")

    -- CP26
    for i=1, REPEAT_26 do
        if stopFlag then setStatus("Stopped") return end
        tpInstant(POS_CP26)
        task.wait(DELAY)
    end

    -- Puncak
    for i=1, REPEAT_PUNC do
        if stopFlag then setStatus("Stopped") return end
        tpInstant(POS_PUNCAK)
        task.wait(DELAY)
    end

    -- Auto-exec
    queueAuto(AUTO_URL)

    -- Rejoin
    task.wait(ASK_DELAY)
    if stopFlag then setStatus("Stopped") return end

    local ok, err = pcall(function()
        local jd = player:GetJoinData()
        local td = jd and jd.TeleportData
        local code = td and td.reservedCode

        if code and code ~= "" then
            local opts = Instance.new("TeleportOptions")
            opts:SetTeleportData({ reservedCode = code, via = "RzMods-Client" })
            TeleportService:TeleportToPrivateServer(PRIVATE_PLACE_ID, code, {player}, nil, opts)
        else
            TeleportService:Teleport(PRIVATE_PLACE_ID, player)
        end
    end)

    if not ok then
        warn("[RzMods][Rejoin] gagal:", err)
        pcall(function() TeleportService:Teleport(PRIVATE_PLACE_ID, player) end)
    end
end

-- ====== UI ======
TabOn:AddButton({
    Name = "Start Auto",
    Callback = function()
        if not running then
            task.spawn(runAuto)
        else
            setStatus("Already Running")
        end
    end
})

TabOff:AddButton({
    Name = "Stop Auto",
    Callback = function()
        stopFlag = true
        running = false
        setStatus("Stopped")
        OrionLib:MakeNotification({
            Name = "AtinPS",
            Content = "Auto script stopped.",
            Time = 3
        })
    end
})

-- ====== AUTO START ======
task.spawn(runAuto)

OrionLib:Init()
